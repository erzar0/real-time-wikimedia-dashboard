services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: 'WARN'
      ZOOKEEPER_MAX_CNXNS: 100
    tmpfs: "/datalog"
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: 'WARN'
      KAFKA_LOG4J_LOGGERS: 'kafka=WARN,kafka.controller=WARN,kafka.log.LogCleaner=WARN,state.change.logger=WARN,kafka.producer.async.DefaultEventHandler=WARN'
      KAFKA_CREATE_TOPICS: "test_topic:1:1,recentchange:1:1,recentchange.event_count:1:1,recentchange.length_change:1:1,recentchange.active_users:1:1"
    depends_on:
      - zookeeper

  kafka-setup:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - kafka
    entrypoint: /bin/sh -c
    command: |
      # Wait for Kafka to be ready
      while ! nc -z kafka 9092; do
        sleep 1;
      done;
      # Set cleanup.policy=compact for the recentchange.active_users topic
      kafka-configs --alter --bootstrap-server kafka:9092 --entity-type topics --entity-name recentchange.active_users --add-config cleanup.policy=compact

  postgresql:
    image: postgres:16.2-alpine
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  spring-boot-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-boot-app
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - postgresql